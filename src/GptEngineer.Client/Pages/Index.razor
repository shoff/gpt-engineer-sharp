@page "/"
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.SignalR.Client

<PageTitle>GptEngineer Sharp</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">About Us</MudText>

<MudPaper Class="d-flex align-center justify-center mud-width-full py-8">

    <MudTextField Label="User:" @bind-Value="userInput"></MudTextField>
    <MudTextField Label="Message:" @bind-Value="messageInput" Adornment="Adornment.End" Lines="1"></MudTextField>
    <MudButton OnClick="Send" Disabled="@(!IsConnected)" Color="Color.Primary">Send</MudButton>

    <MudDivider/>

    <MudList>
        @foreach (var message in messages)
        {
            <MudListItem>@message</MudListItem>
        }
    </MudList>

</MudPaper>

<MudAlert Severity="Severity.Normal">
    You can find documentation and examples on our website here:
    <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit"><b>www.mudblazor.com</b></MudLink>
</MudAlert>

@code {
    private HubConnection? hubConnection;
    private List<string> messages = new();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
